{"ast":null,"code":"import _regeneratorRuntime from \"/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/pages/users/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport data from \"../../data\";\n\nfunction ListUsers(_ref) {\n  var _this = this;\n\n  var users = _ref.users;\n\n  for (var i = 0; i < users.length; i++) {\n    console.log(users[i]);\n  }\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Key\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Name\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, users.map(function (user) {\n    var name = user.fName + \" \" + user.lName;\n    return __jsx(\"tr\", {\n      key: user.userHash,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, user.userHash), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, user.email), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, user.passHash), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, user.fName, \" \", user.lName));\n  }))));\n}\n\n_c = ListUsers;\n\nListUsers.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n\n            if (!req) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return data.readTable(\"Users\");\n\n          case 4:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              users: _context.t0\n            });\n\n          case 8:\n            _context.next = 10;\n            return fetch(\"/api/users\");\n\n          case 10:\n            response = _context.sent;\n            _context.next = 13;\n            return response.json();\n\n          case 13:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", {\n              users: _context.t1\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default ListUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUsers\");","map":{"version":3,"sources":["/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/pages/users/list.js"],"names":["Fragment","Link","data","ListUsers","users","i","length","console","log","map","user","name","fName","lName","userHash","email","passHash","getInitialProps","req","readTable","fetch","response","json"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,SAASC,SAAT,OAA8B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAC5B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,CAAD,CAAjB;AACD;;AACD,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAU;AACnB,QAAMC,IAAI,GAAID,IAAI,CAACE,KAAL,GAAa,GAAb,GAAmBF,IAAI,CAACG,KAAtC;AACA,WACE;AAAI,MAAA,GAAG,EAAEH,IAAI,CAACI,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACI,QAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACM,QAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,IAAI,CAACE,KAAV,OAAkBF,IAAI,CAACG,KAAvB,CAJF,CADF;AAQD,GAVA,CADD,CATF,CADF,CADF;AA2BD;;KA/BQV,S;;AAiCTA,SAAS,CAACc,eAAV;AAAA,uEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;;AAAA,iBACtBA,GADsB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKThB,IAAI,CAACiB,SAAL,CAAe,OAAf,CALS;;AAAA;AAAA;AAAA;AAKtBf,cAAAA,KALsB;AAAA;;AAAA;AAAA;AAAA,mBAUDgB,KAAK,CAAC,YAAD,CAVJ;;AAAA;AAUlBC,YAAAA,QAVkB;AAAA;AAAA,mBAWFA,QAAQ,CAACC,IAAT,EAXE;;AAAA;AAAA;AAAA;AAWflB,cAAAA,KAXe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeD,SAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport data from \"../../data\";\n\nfunction ListUsers({ users }) {\n  for (var i = 0; i < users.length; i++) {\n    console.log(users[i]);\n  }\n  return (\n    <Fragment>\n      <table>\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Email</th>\n            <th>Password</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        {users.map((user) => {\n          const name = (user.fName + \" \" + user.lName)\n          return (\n            <tr key={user.userHash}>\n              <td>{user.userHash}</td>\n              <td>{user.email}</td>\n              <td>{user.passHash}</td>\n              <td>{user.fName} {user.lName}</td>\n            </tr>\n          );\n        })}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n}\n\nListUsers.getInitialProps = async ({ req }) => {\n  if (req) {\n    // this is server side\n    // is fine to use aws-sdk here\n    return {\n      users: await data.readTable(\"Users\")\n    };\n  } else {\n    // we are client side\n    // fetch via api\n    const response = await fetch(\"/api/users\");\n    return { users: await response.json() };\n  }\n};\n\nexport default ListUsers;\n"]},"metadata":{},"sourceType":"module"}