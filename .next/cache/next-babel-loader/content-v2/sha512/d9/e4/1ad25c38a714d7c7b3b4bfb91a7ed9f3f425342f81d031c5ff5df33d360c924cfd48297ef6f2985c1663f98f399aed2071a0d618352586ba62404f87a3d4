{"ast":null,"code":"import _regeneratorRuntime from \"/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport data from \"../../data\";\n\nfunction Listvoters(_ref) {\n  var voters = _ref.voters;\n  return __jsx(Fragment, null, __jsx(\"ul\", null, voters.map(function (voter) {\n    return __jsx(\"li\", {\n      key: voter.voterId\n    }, __jsx(Link, {\n      href: \"/voters/details/[id]\",\n      as: \"/voters/details/\".concat(voter.voterId)\n    }, __jsx(\"a\", null, voter.voterDescription)));\n  })), __jsx(\"div\", null, __jsx(Link, {\n    href: \"/voters/new\"\n  }, __jsx(\"a\", null, \"New voter\"))));\n}\n\nListvoters.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n\n            if (!req) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return data.readTable();\n\n          case 4:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              voters: _context.t0\n            });\n\n          case 8:\n            _context.next = 10;\n            return fetch(\"/api/voters\");\n\n          case 10:\n            response = _context.sent;\n            _context.next = 13;\n            return response.json();\n\n          case 13:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", {\n              voters: _context.t1\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Listvoters;","map":null,"metadata":{},"sourceType":"module"}