{"ast":null,"code":"import { withIronSession } from \"next-iron-session\";\nexport default withIronSession(async (req, res) => {\n  if (req.method === \"POST\") {\n    const response = await fetch(\"/users\");\n    return {\n      users: await response.json()\n    };\n    const {\n      email,\n      password\n    } = req.body;\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].email === email && users[i].passHash === password) {\n        req.session.set(\"user\", {\n          email\n        });\n        await req.session.save();\n        return res.status(201).send(\"\");\n      }\n    }\n\n    return res.status(403).send(\"\");\n  }\n\n  return res.status(404).send(\"\");\n}, {\n  cookieName: \"MYSITECOOKIE\",\n  cookieOptions: {\n    secure: false ? true : false\n  },\n  password: process.env.APPLICATION_SECRET\n});","map":{"version":3,"sources":["/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote/pages/api/sessions.js"],"names":["withIronSession","req","res","method","response","fetch","users","json","email","password","body","i","length","passHash","session","set","save","status","send","cookieName","cookieOptions","secure","process","env","APPLICATION_SECRET"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,eAAeA,eAAe,CAC5B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClB,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAE,MAAMF,QAAQ,CAACG,IAAT;AAAf,KAAP;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBR,GAAG,CAACS,IAAhC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,CAASH,KAAT,KAAmBA,KAAnB,IAA4BF,KAAK,CAACK,CAAD,CAAL,CAASE,QAAT,KAAsBJ,QAAtD,EAAgE;AAC9DR,QAAAA,GAAG,CAACa,OAAJ,CAAYC,GAAZ,CAAgB,MAAhB,EAAwB;AAAEP,UAAAA;AAAF,SAAxB;AACA,cAAMP,GAAG,CAACa,OAAJ,CAAYE,IAAZ,EAAN;AACA,eAAOd,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD;AACF;;AAED,WAAOhB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD;;AACD,SAAOhB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD,CAlB2B,EAmB5B;AACEC,EAAAA,UAAU,EAAE,cADd;AAEEC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,QAAwC,IAAxC,GAA+C;AAD1C,GAFjB;AAKEZ,EAAAA,QAAQ,EAAEa,OAAO,CAACC,GAAR,CAAYC;AALxB,CAnB4B,CAA9B","sourcesContent":["import { withIronSession } from \"next-iron-session\";\n\nexport default withIronSession(\n  async (req, res) => {\n    if (req.method === \"POST\") {\n      const response = await fetch(\"/users\");\n      return { users: await response.json() };\n      const { email, password } = req.body;\n\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].email === email && users[i].passHash === password) {\n          req.session.set(\"user\", { email });\n          await req.session.save();\n          return res.status(201).send(\"\");\n        }\n      }\n\n      return res.status(403).send(\"\");\n    }\n    return res.status(404).send(\"\");\n  },\n  {\n    cookieName: \"MYSITECOOKIE\",\n    cookieOptions: {\n      secure: process.env.NODE_ENV === \"production\" ? true : false\n    },\n    password: process.env.APPLICATION_SECRET\n  }\n);\n"]},"metadata":{},"sourceType":"module"}