{"ast":null,"code":"import { withIronSession } from \"next-iron-session\";\nimport data from \"../../data\";\n\nconst bcrypt = require('bcryptjs');\n\nexport default withIronSession(async (req, res) => {\n  if (req.method === \"POST\") {\n    const users = await data.readTable(\"Users\");\n    const {\n      email,\n      password\n    } = req.body;\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].email === email) {\n        var match = bcrypt.compareSync(password, users[i].passHash);\n\n        if (match) {\n          const fName = users[i].fName;\n          req.session.set(\"user\", {\n            email,\n            fName\n          });\n          await req.session.save();\n          return res.status(201).send(\"\");\n        } else {\n          return res.status(403).send(\"\");\n        }\n      }\n    }\n\n    return res.status(403).send(\"\");\n  }\n\n  return res.status(404).send(\"\");\n}, {\n  cookieName: \"LOGIN\",\n  cookieOptions: {\n    secure: false ? true : false\n  },\n  password: process.env.APPLICATION_SECRET\n});","map":{"version":3,"sources":["/home/charles/serverless-next.js/packages/serverless-components/nextjs-component/examples/evote-dev/pages/api/sessions.js"],"names":["withIronSession","data","bcrypt","require","req","res","method","users","readTable","email","password","body","i","length","match","compareSync","passHash","fName","session","set","save","status","send","cookieName","cookieOptions","secure","process","env","APPLICATION_SECRET"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,eAAeH,eAAe,CAC5B,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AAClB,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,KAAK,GAAG,MAAMN,IAAI,CAACO,SAAL,CAAe,OAAf,CAApB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBN,GAAG,CAACO,IAAhC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIL,KAAK,CAACK,CAAD,CAAL,CAASH,KAAT,KAAmBA,KAAvB,EAA8B;AAC5B,YAAIK,KAAK,GAAGZ,MAAM,CAACa,WAAP,CAAmBL,QAAnB,EAA6BH,KAAK,CAACK,CAAD,CAAL,CAASI,QAAtC,CAAZ;;AACA,YAAIF,KAAJ,EAAW;AACT,gBAAMG,KAAK,GAAGV,KAAK,CAACK,CAAD,CAAL,CAASK,KAAvB;AACAb,UAAAA,GAAG,CAACc,OAAJ,CAAYC,GAAZ,CAAgB,MAAhB,EAAwB;AAAEV,YAAAA,KAAF;AAASQ,YAAAA;AAAT,WAAxB;AACA,gBAAMb,GAAG,CAACc,OAAJ,CAAYE,IAAZ,EAAN;AACA,iBAAOf,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD,SALD,MAKO;AACL,iBAAOjB,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD;AACF;AACF;;AACD,WAAOjB,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD;;AACD,SAAOjB,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,CAAP;AACD,CAtB2B,EAuB5B;AACEC,EAAAA,UAAU,EAAE,OADd;AAEEC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,QAAwC,IAAxC,GAA+C;AAD1C,GAFjB;AAKEf,EAAAA,QAAQ,EAAEgB,OAAO,CAACC,GAAR,CAAYC;AALxB,CAvB4B,CAA9B","sourcesContent":["import { withIronSession } from \"next-iron-session\";\nimport data from \"../../data\";\n\nconst bcrypt = require('bcryptjs');\n\nexport default withIronSession(\n  async (req, res) => {\n    if (req.method === \"POST\") {\n      const users = await data.readTable(\"Users\")\n      const { email, password } = req.body;\n\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].email === email) {\n          var match = bcrypt.compareSync(password, users[i].passHash);\n          if (match) {\n            const fName = users[i].fName\n            req.session.set(\"user\", { email, fName });\n            await req.session.save();\n            return res.status(201).send(\"\");\n          } else {\n            return res.status(403).send(\"\");\n          }\n        }\n      }\n      return res.status(403).send(\"\");\n    }\n    return res.status(404).send(\"\");\n  },\n  {\n    cookieName: \"LOGIN\",\n    cookieOptions: {\n      secure: process.env.NODE_ENV === \"production\" ? true : false\n    },\n    password: process.env.APPLICATION_SECRET\n  }\n);\n"]},"metadata":{},"sourceType":"module"}